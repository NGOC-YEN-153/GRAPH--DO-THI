#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
vector<int>ke[1001];
int visited[1001],parent[1001];
int n,m;
bool dfs(int u){
    visited[u] = 1;
    for(int v : ke[u]){
        if(!visited[v]){
            parent[v] = u;
            if(dfs(v)){
                return true;
            }
        }
        else if(v != parent[u]){
            return true;
        }
    }
    return false;
}
int main(){
    memset(visited,0,sizeof(visited));
    cin >> n >> m;
    for(int i = 0; i < m ;i++){
        int x,y; cin >> x >> y;
        ke[x].push_back(y);
        ke[y].push_back(x);
    }
    for(int i = 1; i <= n; i++){
        sort(ke[i].begin(),ke[i].end());
    }
    int ok = 0;
    for(int i = 1; i <= n ;i++){
        if(!visited[i]){
            if(dfs(i)){
                ok = 1;
                break;
            }
        }
    }
    cout << ok;
}
